-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.12 from ./grammar/parser.y
-----------------------------------------------------------------------------

state 9 contains 1 shift/reduce conflicts.
state 25 contains 1 shift/reduce conflicts.
state 34 contains 1 shift/reduce conflicts and 1 reduce/reduce conflicts.
state 69 contains 1 shift/reduce conflicts.
state 81 contains 13 shift/reduce conflicts.
state 97 contains 1 shift/reduce conflicts.
state 106 contains 1 shift/reduce conflicts.
state 118 contains 1 shift/reduce conflicts.
state 128 contains 1 shift/reduce conflicts and 1 reduce/reduce conflicts.
state 145 contains 1 shift/reduce conflicts.

rule 66 is unused
rule 67 is unused
rule 68 is unused
rule 69 is unused
rule 82 is unused

terminal this is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_program -> TopLevel                         (0)
	TopLevel -> Expression Semi_M                      (1)
	TopLevel -> Expression Expression_Seq Semi_M       (2)
	TopLevel ->                                        (3)
	Expression_Seq -> ';' Expression Expression_Seq    (4)
	Expression_Seq ->                                  (5)
	Semi_M -> ';'                                      (6)
	Semi_M ->                                          (7)
	Operator -> '*'                                    (8)
	Operator -> '+'                                    (9)
	Operator -> '-'                                    (10)
	Operator -> '/'                                    (11)
	Operator -> '%'                                    (12)
	Operator -> uneq                                   (13)
	Operator -> eq                                     (14)
	Operator -> '<'                                    (15)
	Operator -> '>'                                    (16)
	Operator -> leq                                    (17)
	Operator -> greq                                   (18)
	Operator -> '&'                                    (19)
	Operator -> '|'                                    (20)
	Literal -> number                                  (21)
	Literal -> false                                   (22)
	Literal -> true                                    (23)
	Literal -> unit                                    (24)
	Literal -> begin end                               (25)
	Expression -> Function_Def                         (26)
	Expression -> Object_Def                           (27)
	Expression -> Variable_Def                         (28)
	Expression -> Object_Field                         (29)
	Expression -> Conditional                          (30)
	Expression -> Loop                                 (31)
	Expression -> Mutation                             (32)
	Expression -> Print                                (33)
	Expression -> Operation                            (34)
	Function_Def -> function identifier '(' Param_List ')' rarrow Expression   (35)
	Variable_Def -> let identifier '=' Expression      (36)
	Array_Def -> array '(' Expression '.' Expression ')'   (37)
	Operator_Def -> function Operator '(' Param_List ')' rarrow Expression   (38)
	Extends -> extends Expression                      (39)
	Object_Def -> object Param_List Extends begin Object_Body end   (40)
	Object_Body -> Member Semi_M                       (41)
	Object_Body -> Member Member_Seq Semi_M            (42)
	Object_Body ->                                     (43)
	Member -> Variable_Def                             (44)
	Member -> Function_Def                             (45)
	Member -> Operator_Def                             (46)
	Member_Seq -> ';' Member Member_Seq                (47)
	Member_Seq ->                                      (48)
	Mutation -> identifier larrow Expression           (49)
	Mutation -> Object_Field larrow Expression         (50)
	Mutation -> Array_Access larrow Expression         (51)
	Accessible -> '(' Expression ')'                   (52)
	Accessible -> Block                                (53)
	Accessible -> Application                          (54)
	Accessible -> Array_Def                            (55)
	Accessible -> Array_Access                         (56)
	Accessible -> identifier                           (57)
	Accessible -> Literal                              (58)
	Conditional -> if Expression then Expression Else_M   (59)
	Else_M -> else Expression                          (60)
	Else_M ->                                          (61)
	Loop -> while Expression do Expression             (62)
	Block -> begin Expression Expression_Seq end       (63)
	Object_Field -> Accessible '.' Field_Seq identifier   (64)
	Field_Seq -> identifier '.' Field_Seq              (65)
	Field_Seq ->                                       (66)
	Method -> Accessible '.' Field_Seq Id_Op           (67)
	Id_Op -> identifier                                (68)
	Id_Op -> Operator                                  (69)
	Param_List -> identifier Identifier_Seq Comma_M    (70)
	Param_List ->                                      (71)
	Identifier_Seq -> ',' identifier Identifier_Seq    (72)
	Identifier_Seq ->                                  (73)
	Comma_M -> ';'                                     (74)
	Comma_M ->                                         (75)
	Arg_List -> Expression Value_Seq Comma_M           (76)
	Arg_List ->                                        (77)
	Value_Seq -> ',' Expression Value_Seq              (78)
	Value_Seq ->                                       (79)
	Callable -> identifier                             (80)
	Callable -> Object_Field                           (81)
	Callable -> array                                  (82)
	Application -> Callable '(' Arg_List ')'           (83)
	Array_Access -> Accessible '[' Expression ']'      (84)
	Array_Access -> Object_Field '[' Expression ']'    (85)
	Prnt_Args -> ',' Arg_List                          (86)
	Prnt_Args ->                                       (87)
	Print -> print '(' string Prnt_Args ')'            (88)
	Operation -> Operation Operator Operation          (89)
	Operation -> Accessible                            (90)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'('            { LeftParen }
	')'            { RightParen }
	'['            { LeftBracket }
	']'            { RightBracket }
	';'            { Semicolon }
	'.'            { Dot }
	','            { Comma }
	larrow         { LeftArrow }
	rarrow         { RightArrow }
	'='            { Be }
	'+'            { Plus }
	'-'            { Minus }
	'*'            { Multiply }
	'/'            { Divide }
	'%'            { Modulo }
	leq            { LesserEqual }
	greq           { GreaterEqual }
	'<'            { Lesser }
	'>'            { Greater }
	'|'            { Or }
	'&'            { And }
	eq             { Equal }
	uneq           { UnEqual }
	while          { While }
	object         { Object }
	if             { If }
	else           { Else }
	then           { Then }
	true           { True }
	false          { False }
	array          { Array }
	unit           { Unit }
	let            { Let }
	begin          { Begin }
	end            { End }
	this           { This }
	print          { Print }
	function       { Function }
	do             { Do }
	extends        { Extends }
	identifier     { Identifier $$ }
	number         { Number $$ }
	string         { String $$ }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_program  rule  0
	TopLevel        rules 1, 2, 3
	Expression_Seq  rules 4, 5
	Semi_M          rules 6, 7
	Operator        rules 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
	Literal         rules 21, 22, 23, 24, 25
	Expression      rules 26, 27, 28, 29, 30, 31, 32, 33, 34
	Function_Def    rule  35
	Variable_Def    rule  36
	Array_Def       rule  37
	Operator_Def    rule  38
	Extends         rule  39
	Object_Def      rule  40
	Object_Body     rules 41, 42, 43
	Member          rules 44, 45, 46
	Member_Seq      rules 47, 48
	Mutation        rules 49, 50, 51
	Accessible      rules 52, 53, 54, 55, 56, 57, 58
	Conditional     rule  59
	Else_M          rules 60, 61
	Loop            rule  62
	Block           rule  63
	Object_Field    rule  64
	Field_Seq       rules 65, 66
	Method          rule  67
	Id_Op           rules 68, 69
	Param_List      rules 70, 71
	Identifier_Seq  rules 72, 73
	Comma_M         rules 74, 75
	Arg_List        rules 76, 77
	Value_Seq       rules 78, 79
	Callable        rules 80, 81, 82
	Application     rule  83
	Array_Access    rules 84, 85
	Prnt_Args       rules 86, 87
	Print           rule  88
	Operation       rules 89, 90

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	'('            shift, and enter state 19
	while          shift, and enter state 20
	object         shift, and enter state 21
	if             shift, and enter state 22
	true           shift, and enter state 23
	false          shift, and enter state 24
	array          shift, and enter state 25
	unit           shift, and enter state 26
	let            shift, and enter state 27
	begin          shift, and enter state 28
	print          shift, and enter state 29
	function       shift, and enter state 30
	identifier     shift, and enter state 31
	number         shift, and enter state 32
	%eof           reduce using rule 3

	TopLevel       goto state 33
	Literal        goto state 2
	Expression     goto state 34
	Function_Def   goto state 4
	Variable_Def   goto state 5
	Array_Def      goto state 6
	Object_Def     goto state 7
	Mutation       goto state 8
	Accessible     goto state 9
	Conditional    goto state 10
	Loop           goto state 11
	Block          goto state 12
	Object_Field   goto state 13
	Callable       goto state 14
	Application    goto state 15
	Array_Access   goto state 16
	Print          goto state 17
	Operation      goto state 18

State 1


	'('            shift, and enter state 19
	while          shift, and enter state 20
	object         shift, and enter state 21
	if             shift, and enter state 22
	true           shift, and enter state 23
	false          shift, and enter state 24
	array          shift, and enter state 25
	unit           shift, and enter state 26
	let            shift, and enter state 27
	begin          shift, and enter state 28
	print          shift, and enter state 29
	function       shift, and enter state 30
	identifier     shift, and enter state 31
	number         shift, and enter state 32

	Literal        goto state 2
	Expression     goto state 3
	Function_Def   goto state 4
	Variable_Def   goto state 5
	Array_Def      goto state 6
	Object_Def     goto state 7
	Mutation       goto state 8
	Accessible     goto state 9
	Conditional    goto state 10
	Loop           goto state 11
	Block          goto state 12
	Object_Field   goto state 13
	Callable       goto state 14
	Application    goto state 15
	Array_Access   goto state 16
	Print          goto state 17
	Operation      goto state 18

State 2

	Accessible -> Literal .                             (rule 58)

	')'            reduce using rule 58
	'['            reduce using rule 58
	']'            reduce using rule 58
	';'            reduce using rule 58
	'.'            reduce using rule 58
	','            reduce using rule 58
	'+'            reduce using rule 58
	'-'            reduce using rule 58
	'*'            reduce using rule 58
	'/'            reduce using rule 58
	'%'            reduce using rule 58
	leq            reduce using rule 58
	greq           reduce using rule 58
	'<'            reduce using rule 58
	'>'            reduce using rule 58
	'|'            reduce using rule 58
	'&'            reduce using rule 58
	eq             reduce using rule 58
	uneq           reduce using rule 58
	else           reduce using rule 58
	then           reduce using rule 58
	begin          reduce using rule 58
	end            reduce using rule 58
	do             reduce using rule 58
	%eof           reduce using rule 58


State 3

	TopLevel -> Expression . Semi_M                     (rule 1)

	';'            shift, and enter state 70

	Semi_M         goto state 36

State 4

	Expression -> Function_Def .                        (rule 26)

	')'            reduce using rule 26
	']'            reduce using rule 26
	';'            reduce using rule 26
	'.'            reduce using rule 26
	','            reduce using rule 26
	else           reduce using rule 26
	then           reduce using rule 26
	begin          reduce using rule 26
	end            reduce using rule 26
	do             reduce using rule 26
	%eof           reduce using rule 26


State 5

	Expression -> Variable_Def .                        (rule 28)

	')'            reduce using rule 28
	']'            reduce using rule 28
	';'            reduce using rule 28
	'.'            reduce using rule 28
	','            reduce using rule 28
	else           reduce using rule 28
	then           reduce using rule 28
	begin          reduce using rule 28
	end            reduce using rule 28
	do             reduce using rule 28
	%eof           reduce using rule 28


State 6

	Accessible -> Array_Def .                           (rule 55)

	')'            reduce using rule 55
	'['            reduce using rule 55
	']'            reduce using rule 55
	';'            reduce using rule 55
	'.'            reduce using rule 55
	','            reduce using rule 55
	'+'            reduce using rule 55
	'-'            reduce using rule 55
	'*'            reduce using rule 55
	'/'            reduce using rule 55
	'%'            reduce using rule 55
	leq            reduce using rule 55
	greq           reduce using rule 55
	'<'            reduce using rule 55
	'>'            reduce using rule 55
	'|'            reduce using rule 55
	'&'            reduce using rule 55
	eq             reduce using rule 55
	uneq           reduce using rule 55
	else           reduce using rule 55
	then           reduce using rule 55
	begin          reduce using rule 55
	end            reduce using rule 55
	do             reduce using rule 55
	%eof           reduce using rule 55


State 7

	Expression -> Object_Def .                          (rule 27)

	')'            reduce using rule 27
	']'            reduce using rule 27
	';'            reduce using rule 27
	'.'            reduce using rule 27
	','            reduce using rule 27
	else           reduce using rule 27
	then           reduce using rule 27
	begin          reduce using rule 27
	end            reduce using rule 27
	do             reduce using rule 27
	%eof           reduce using rule 27


State 8

	Expression -> Mutation .                            (rule 32)

	')'            reduce using rule 32
	']'            reduce using rule 32
	';'            reduce using rule 32
	'.'            reduce using rule 32
	','            reduce using rule 32
	else           reduce using rule 32
	then           reduce using rule 32
	begin          reduce using rule 32
	end            reduce using rule 32
	do             reduce using rule 32
	%eof           reduce using rule 32


State 9

	Object_Field -> Accessible . '.' Field_Seq identifier    (rule 64)
	Array_Access -> Accessible . '[' Expression ']'     (rule 84)
	Operation -> Accessible .                           (rule 90)

	')'            reduce using rule 90
	'['            shift, and enter state 68
	']'            reduce using rule 90
	';'            reduce using rule 90
	'.'            shift, and enter state 69
			(reduce using rule 90)

	','            reduce using rule 90
	'+'            reduce using rule 90
	'-'            reduce using rule 90
	'*'            reduce using rule 90
	'/'            reduce using rule 90
	'%'            reduce using rule 90
	leq            reduce using rule 90
	greq           reduce using rule 90
	'<'            reduce using rule 90
	'>'            reduce using rule 90
	'|'            reduce using rule 90
	'&'            reduce using rule 90
	eq             reduce using rule 90
	uneq           reduce using rule 90
	else           reduce using rule 90
	then           reduce using rule 90
	begin          reduce using rule 90
	end            reduce using rule 90
	do             reduce using rule 90
	%eof           reduce using rule 90


State 10

	Expression -> Conditional .                         (rule 30)

	')'            reduce using rule 30
	']'            reduce using rule 30
	';'            reduce using rule 30
	'.'            reduce using rule 30
	','            reduce using rule 30
	else           reduce using rule 30
	then           reduce using rule 30
	begin          reduce using rule 30
	end            reduce using rule 30
	do             reduce using rule 30
	%eof           reduce using rule 30


State 11

	Expression -> Loop .                                (rule 31)

	')'            reduce using rule 31
	']'            reduce using rule 31
	';'            reduce using rule 31
	'.'            reduce using rule 31
	','            reduce using rule 31
	else           reduce using rule 31
	then           reduce using rule 31
	begin          reduce using rule 31
	end            reduce using rule 31
	do             reduce using rule 31
	%eof           reduce using rule 31


State 12

	Accessible -> Block .                               (rule 53)

	')'            reduce using rule 53
	'['            reduce using rule 53
	']'            reduce using rule 53
	';'            reduce using rule 53
	'.'            reduce using rule 53
	','            reduce using rule 53
	'+'            reduce using rule 53
	'-'            reduce using rule 53
	'*'            reduce using rule 53
	'/'            reduce using rule 53
	'%'            reduce using rule 53
	leq            reduce using rule 53
	greq           reduce using rule 53
	'<'            reduce using rule 53
	'>'            reduce using rule 53
	'|'            reduce using rule 53
	'&'            reduce using rule 53
	eq             reduce using rule 53
	uneq           reduce using rule 53
	else           reduce using rule 53
	then           reduce using rule 53
	begin          reduce using rule 53
	end            reduce using rule 53
	do             reduce using rule 53
	%eof           reduce using rule 53


State 13

	Expression -> Object_Field .                        (rule 29)
	Mutation -> Object_Field . larrow Expression        (rule 50)
	Callable -> Object_Field .                          (rule 81)
	Array_Access -> Object_Field . '[' Expression ']'    (rule 85)

	'('            reduce using rule 81
	')'            reduce using rule 29
	'['            shift, and enter state 66
	']'            reduce using rule 29
	';'            reduce using rule 29
	'.'            reduce using rule 29
	','            reduce using rule 29
	larrow         shift, and enter state 67
	else           reduce using rule 29
	then           reduce using rule 29
	begin          reduce using rule 29
	end            reduce using rule 29
	do             reduce using rule 29
	%eof           reduce using rule 29


State 14

	Application -> Callable . '(' Arg_List ')'          (rule 83)

	'('            shift, and enter state 65


State 15

	Accessible -> Application .                         (rule 54)

	')'            reduce using rule 54
	'['            reduce using rule 54
	']'            reduce using rule 54
	';'            reduce using rule 54
	'.'            reduce using rule 54
	','            reduce using rule 54
	'+'            reduce using rule 54
	'-'            reduce using rule 54
	'*'            reduce using rule 54
	'/'            reduce using rule 54
	'%'            reduce using rule 54
	leq            reduce using rule 54
	greq           reduce using rule 54
	'<'            reduce using rule 54
	'>'            reduce using rule 54
	'|'            reduce using rule 54
	'&'            reduce using rule 54
	eq             reduce using rule 54
	uneq           reduce using rule 54
	else           reduce using rule 54
	then           reduce using rule 54
	begin          reduce using rule 54
	end            reduce using rule 54
	do             reduce using rule 54
	%eof           reduce using rule 54


State 16

	Mutation -> Array_Access . larrow Expression        (rule 51)
	Accessible -> Array_Access .                        (rule 56)

	')'            reduce using rule 56
	'['            reduce using rule 56
	']'            reduce using rule 56
	';'            reduce using rule 56
	'.'            reduce using rule 56
	','            reduce using rule 56
	larrow         shift, and enter state 64
	'+'            reduce using rule 56
	'-'            reduce using rule 56
	'*'            reduce using rule 56
	'/'            reduce using rule 56
	'%'            reduce using rule 56
	leq            reduce using rule 56
	greq           reduce using rule 56
	'<'            reduce using rule 56
	'>'            reduce using rule 56
	'|'            reduce using rule 56
	'&'            reduce using rule 56
	eq             reduce using rule 56
	uneq           reduce using rule 56
	else           reduce using rule 56
	then           reduce using rule 56
	begin          reduce using rule 56
	end            reduce using rule 56
	do             reduce using rule 56
	%eof           reduce using rule 56


State 17

	Expression -> Print .                               (rule 33)

	')'            reduce using rule 33
	']'            reduce using rule 33
	';'            reduce using rule 33
	'.'            reduce using rule 33
	','            reduce using rule 33
	else           reduce using rule 33
	then           reduce using rule 33
	begin          reduce using rule 33
	end            reduce using rule 33
	do             reduce using rule 33
	%eof           reduce using rule 33


State 18

	Expression -> Operation .                           (rule 34)
	Operation -> Operation . Operator Operation         (rule 89)

	')'            reduce using rule 34
	']'            reduce using rule 34
	';'            reduce using rule 34
	'.'            reduce using rule 34
	','            reduce using rule 34
	'+'            shift, and enter state 51
	'-'            shift, and enter state 52
	'*'            shift, and enter state 53
	'/'            shift, and enter state 54
	'%'            shift, and enter state 55
	leq            shift, and enter state 56
	greq           shift, and enter state 57
	'<'            shift, and enter state 58
	'>'            shift, and enter state 59
	'|'            shift, and enter state 60
	'&'            shift, and enter state 61
	eq             shift, and enter state 62
	uneq           shift, and enter state 63
	else           reduce using rule 34
	then           reduce using rule 34
	begin          reduce using rule 34
	end            reduce using rule 34
	do             reduce using rule 34
	%eof           reduce using rule 34

	Operator       goto state 50

State 19

	Accessible -> '(' . Expression ')'                  (rule 52)

	'('            shift, and enter state 19
	while          shift, and enter state 20
	object         shift, and enter state 21
	if             shift, and enter state 22
	true           shift, and enter state 23
	false          shift, and enter state 24
	array          shift, and enter state 25
	unit           shift, and enter state 26
	let            shift, and enter state 27
	begin          shift, and enter state 28
	print          shift, and enter state 29
	function       shift, and enter state 30
	identifier     shift, and enter state 31
	number         shift, and enter state 32

	Literal        goto state 2
	Expression     goto state 49
	Function_Def   goto state 4
	Variable_Def   goto state 5
	Array_Def      goto state 6
	Object_Def     goto state 7
	Mutation       goto state 8
	Accessible     goto state 9
	Conditional    goto state 10
	Loop           goto state 11
	Block          goto state 12
	Object_Field   goto state 13
	Callable       goto state 14
	Application    goto state 15
	Array_Access   goto state 16
	Print          goto state 17
	Operation      goto state 18

State 20

	Loop -> while . Expression do Expression            (rule 62)

	'('            shift, and enter state 19
	while          shift, and enter state 20
	object         shift, and enter state 21
	if             shift, and enter state 22
	true           shift, and enter state 23
	false          shift, and enter state 24
	array          shift, and enter state 25
	unit           shift, and enter state 26
	let            shift, and enter state 27
	begin          shift, and enter state 28
	print          shift, and enter state 29
	function       shift, and enter state 30
	identifier     shift, and enter state 31
	number         shift, and enter state 32

	Literal        goto state 2
	Expression     goto state 48
	Function_Def   goto state 4
	Variable_Def   goto state 5
	Array_Def      goto state 6
	Object_Def     goto state 7
	Mutation       goto state 8
	Accessible     goto state 9
	Conditional    goto state 10
	Loop           goto state 11
	Block          goto state 12
	Object_Field   goto state 13
	Callable       goto state 14
	Application    goto state 15
	Array_Access   goto state 16
	Print          goto state 17
	Operation      goto state 18

State 21

	Object_Def -> object . Param_List Extends begin Object_Body end    (rule 40)

	extends        reduce using rule 71
	identifier     shift, and enter state 47

	Param_List     goto state 46

State 22

	Conditional -> if . Expression then Expression Else_M    (rule 59)

	'('            shift, and enter state 19
	while          shift, and enter state 20
	object         shift, and enter state 21
	if             shift, and enter state 22
	true           shift, and enter state 23
	false          shift, and enter state 24
	array          shift, and enter state 25
	unit           shift, and enter state 26
	let            shift, and enter state 27
	begin          shift, and enter state 28
	print          shift, and enter state 29
	function       shift, and enter state 30
	identifier     shift, and enter state 31
	number         shift, and enter state 32

	Literal        goto state 2
	Expression     goto state 45
	Function_Def   goto state 4
	Variable_Def   goto state 5
	Array_Def      goto state 6
	Object_Def     goto state 7
	Mutation       goto state 8
	Accessible     goto state 9
	Conditional    goto state 10
	Loop           goto state 11
	Block          goto state 12
	Object_Field   goto state 13
	Callable       goto state 14
	Application    goto state 15
	Array_Access   goto state 16
	Print          goto state 17
	Operation      goto state 18

State 23

	Literal -> true .                                   (rule 23)

	')'            reduce using rule 23
	'['            reduce using rule 23
	']'            reduce using rule 23
	';'            reduce using rule 23
	'.'            reduce using rule 23
	','            reduce using rule 23
	'+'            reduce using rule 23
	'-'            reduce using rule 23
	'*'            reduce using rule 23
	'/'            reduce using rule 23
	'%'            reduce using rule 23
	leq            reduce using rule 23
	greq           reduce using rule 23
	'<'            reduce using rule 23
	'>'            reduce using rule 23
	'|'            reduce using rule 23
	'&'            reduce using rule 23
	eq             reduce using rule 23
	uneq           reduce using rule 23
	else           reduce using rule 23
	then           reduce using rule 23
	begin          reduce using rule 23
	end            reduce using rule 23
	do             reduce using rule 23
	%eof           reduce using rule 23


State 24

	Literal -> false .                                  (rule 22)

	')'            reduce using rule 22
	'['            reduce using rule 22
	']'            reduce using rule 22
	';'            reduce using rule 22
	'.'            reduce using rule 22
	','            reduce using rule 22
	'+'            reduce using rule 22
	'-'            reduce using rule 22
	'*'            reduce using rule 22
	'/'            reduce using rule 22
	'%'            reduce using rule 22
	leq            reduce using rule 22
	greq           reduce using rule 22
	'<'            reduce using rule 22
	'>'            reduce using rule 22
	'|'            reduce using rule 22
	'&'            reduce using rule 22
	eq             reduce using rule 22
	uneq           reduce using rule 22
	else           reduce using rule 22
	then           reduce using rule 22
	begin          reduce using rule 22
	end            reduce using rule 22
	do             reduce using rule 22
	%eof           reduce using rule 22


State 25

	Array_Def -> array . '(' Expression '.' Expression ')'    (rule 37)
	Callable -> array .                                 (rule 82)

	'('            shift, and enter state 44
			(reduce using rule 82)



State 26

	Literal -> unit .                                   (rule 24)

	')'            reduce using rule 24
	'['            reduce using rule 24
	']'            reduce using rule 24
	';'            reduce using rule 24
	'.'            reduce using rule 24
	','            reduce using rule 24
	'+'            reduce using rule 24
	'-'            reduce using rule 24
	'*'            reduce using rule 24
	'/'            reduce using rule 24
	'%'            reduce using rule 24
	leq            reduce using rule 24
	greq           reduce using rule 24
	'<'            reduce using rule 24
	'>'            reduce using rule 24
	'|'            reduce using rule 24
	'&'            reduce using rule 24
	eq             reduce using rule 24
	uneq           reduce using rule 24
	else           reduce using rule 24
	then           reduce using rule 24
	begin          reduce using rule 24
	end            reduce using rule 24
	do             reduce using rule 24
	%eof           reduce using rule 24


State 27

	Variable_Def -> let . identifier '=' Expression     (rule 36)

	identifier     shift, and enter state 43


State 28

	Literal -> begin . end                              (rule 25)
	Block -> begin . Expression Expression_Seq end      (rule 63)

	'('            shift, and enter state 19
	while          shift, and enter state 20
	object         shift, and enter state 21
	if             shift, and enter state 22
	true           shift, and enter state 23
	false          shift, and enter state 24
	array          shift, and enter state 25
	unit           shift, and enter state 26
	let            shift, and enter state 27
	begin          shift, and enter state 28
	end            shift, and enter state 42
	print          shift, and enter state 29
	function       shift, and enter state 30
	identifier     shift, and enter state 31
	number         shift, and enter state 32

	Literal        goto state 2
	Expression     goto state 41
	Function_Def   goto state 4
	Variable_Def   goto state 5
	Array_Def      goto state 6
	Object_Def     goto state 7
	Mutation       goto state 8
	Accessible     goto state 9
	Conditional    goto state 10
	Loop           goto state 11
	Block          goto state 12
	Object_Field   goto state 13
	Callable       goto state 14
	Application    goto state 15
	Array_Access   goto state 16
	Print          goto state 17
	Operation      goto state 18

State 29

	Print -> print . '(' string Prnt_Args ')'           (rule 88)

	'('            shift, and enter state 40


State 30

	Function_Def -> function . identifier '(' Param_List ')' rarrow Expression    (rule 35)

	identifier     shift, and enter state 39


State 31

	Mutation -> identifier . larrow Expression          (rule 49)
	Accessible -> identifier .                          (rule 57)
	Callable -> identifier .                            (rule 80)

	'('            reduce using rule 80
	')'            reduce using rule 57
	'['            reduce using rule 57
	']'            reduce using rule 57
	';'            reduce using rule 57
	'.'            reduce using rule 57
	','            reduce using rule 57
	larrow         shift, and enter state 38
	'+'            reduce using rule 57
	'-'            reduce using rule 57
	'*'            reduce using rule 57
	'/'            reduce using rule 57
	'%'            reduce using rule 57
	leq            reduce using rule 57
	greq           reduce using rule 57
	'<'            reduce using rule 57
	'>'            reduce using rule 57
	'|'            reduce using rule 57
	'&'            reduce using rule 57
	eq             reduce using rule 57
	uneq           reduce using rule 57
	else           reduce using rule 57
	then           reduce using rule 57
	begin          reduce using rule 57
	end            reduce using rule 57
	do             reduce using rule 57
	%eof           reduce using rule 57


State 32

	Literal -> number .                                 (rule 21)

	')'            reduce using rule 21
	'['            reduce using rule 21
	']'            reduce using rule 21
	';'            reduce using rule 21
	'.'            reduce using rule 21
	','            reduce using rule 21
	'+'            reduce using rule 21
	'-'            reduce using rule 21
	'*'            reduce using rule 21
	'/'            reduce using rule 21
	'%'            reduce using rule 21
	leq            reduce using rule 21
	greq           reduce using rule 21
	'<'            reduce using rule 21
	'>'            reduce using rule 21
	'|'            reduce using rule 21
	'&'            reduce using rule 21
	eq             reduce using rule 21
	uneq           reduce using rule 21
	else           reduce using rule 21
	then           reduce using rule 21
	begin          reduce using rule 21
	end            reduce using rule 21
	do             reduce using rule 21
	%eof           reduce using rule 21


State 33

	%start_program -> TopLevel .                        (rule 0)

	%eof           accept


State 34

	TopLevel -> Expression . Semi_M                     (rule 1)
	TopLevel -> Expression . Expression_Seq Semi_M      (rule 2)

	';'            shift, and enter state 37
			(reduce using rule 5)

	%eof           reduce using rule 7
			(reduce using rule 5)


	Expression_Seq goto state 35
	Semi_M         goto state 36

State 35

	TopLevel -> Expression Expression_Seq . Semi_M      (rule 2)

	';'            shift, and enter state 70
	%eof           reduce using rule 7

	Semi_M         goto state 98

State 36

	TopLevel -> Expression Semi_M .                     (rule 1)

	%eof           reduce using rule 1


State 37

	Expression_Seq -> ';' . Expression Expression_Seq    (rule 4)
	Semi_M -> ';' .                                     (rule 6)

	'('            shift, and enter state 19
	while          shift, and enter state 20
	object         shift, and enter state 21
	if             shift, and enter state 22
	true           shift, and enter state 23
	false          shift, and enter state 24
	array          shift, and enter state 25
	unit           shift, and enter state 26
	let            shift, and enter state 27
	begin          shift, and enter state 28
	print          shift, and enter state 29
	function       shift, and enter state 30
	identifier     shift, and enter state 31
	number         shift, and enter state 32
	%eof           reduce using rule 6

	Literal        goto state 2
	Expression     goto state 97
	Function_Def   goto state 4
	Variable_Def   goto state 5
	Array_Def      goto state 6
	Object_Def     goto state 7
	Mutation       goto state 8
	Accessible     goto state 9
	Conditional    goto state 10
	Loop           goto state 11
	Block          goto state 12
	Object_Field   goto state 13
	Callable       goto state 14
	Application    goto state 15
	Array_Access   goto state 16
	Print          goto state 17
	Operation      goto state 18

State 38

	Mutation -> identifier larrow . Expression          (rule 49)

	'('            shift, and enter state 19
	while          shift, and enter state 20
	object         shift, and enter state 21
	if             shift, and enter state 22
	true           shift, and enter state 23
	false          shift, and enter state 24
	array          shift, and enter state 25
	unit           shift, and enter state 26
	let            shift, and enter state 27
	begin          shift, and enter state 28
	print          shift, and enter state 29
	function       shift, and enter state 30
	identifier     shift, and enter state 31
	number         shift, and enter state 32

	Literal        goto state 2
	Expression     goto state 96
	Function_Def   goto state 4
	Variable_Def   goto state 5
	Array_Def      goto state 6
	Object_Def     goto state 7
	Mutation       goto state 8
	Accessible     goto state 9
	Conditional    goto state 10
	Loop           goto state 11
	Block          goto state 12
	Object_Field   goto state 13
	Callable       goto state 14
	Application    goto state 15
	Array_Access   goto state 16
	Print          goto state 17
	Operation      goto state 18

State 39

	Function_Def -> function identifier . '(' Param_List ')' rarrow Expression    (rule 35)

	'('            shift, and enter state 95


State 40

	Print -> print '(' . string Prnt_Args ')'           (rule 88)

	string         shift, and enter state 94


State 41

	Block -> begin Expression . Expression_Seq end      (rule 63)

	';'            shift, and enter state 93
	end            reduce using rule 5

	Expression_Seq goto state 92

State 42

	Literal -> begin end .                              (rule 25)

	')'            reduce using rule 25
	'['            reduce using rule 25
	']'            reduce using rule 25
	';'            reduce using rule 25
	'.'            reduce using rule 25
	','            reduce using rule 25
	'+'            reduce using rule 25
	'-'            reduce using rule 25
	'*'            reduce using rule 25
	'/'            reduce using rule 25
	'%'            reduce using rule 25
	leq            reduce using rule 25
	greq           reduce using rule 25
	'<'            reduce using rule 25
	'>'            reduce using rule 25
	'|'            reduce using rule 25
	'&'            reduce using rule 25
	eq             reduce using rule 25
	uneq           reduce using rule 25
	else           reduce using rule 25
	then           reduce using rule 25
	begin          reduce using rule 25
	end            reduce using rule 25
	do             reduce using rule 25
	%eof           reduce using rule 25


State 43

	Variable_Def -> let identifier . '=' Expression     (rule 36)

	'='            shift, and enter state 91


State 44

	Array_Def -> array '(' . Expression '.' Expression ')'    (rule 37)

	'('            shift, and enter state 19
	while          shift, and enter state 20
	object         shift, and enter state 21
	if             shift, and enter state 22
	true           shift, and enter state 23
	false          shift, and enter state 24
	array          shift, and enter state 25
	unit           shift, and enter state 26
	let            shift, and enter state 27
	begin          shift, and enter state 28
	print          shift, and enter state 29
	function       shift, and enter state 30
	identifier     shift, and enter state 31
	number         shift, and enter state 32

	Literal        goto state 2
	Expression     goto state 90
	Function_Def   goto state 4
	Variable_Def   goto state 5
	Array_Def      goto state 6
	Object_Def     goto state 7
	Mutation       goto state 8
	Accessible     goto state 9
	Conditional    goto state 10
	Loop           goto state 11
	Block          goto state 12
	Object_Field   goto state 13
	Callable       goto state 14
	Application    goto state 15
	Array_Access   goto state 16
	Print          goto state 17
	Operation      goto state 18

State 45

	Conditional -> if Expression . then Expression Else_M    (rule 59)

	then           shift, and enter state 89


State 46

	Object_Def -> object Param_List . Extends begin Object_Body end    (rule 40)

	extends        shift, and enter state 88

	Extends        goto state 87

State 47

	Param_List -> identifier . Identifier_Seq Comma_M    (rule 70)

	')'            reduce using rule 73
	';'            reduce using rule 73
	','            shift, and enter state 86
	extends        reduce using rule 73

	Identifier_Seq goto state 85

State 48

	Loop -> while Expression . do Expression            (rule 62)

	do             shift, and enter state 84


State 49

	Accessible -> '(' Expression . ')'                  (rule 52)

	')'            shift, and enter state 83


State 50

	Operation -> Operation Operator . Operation         (rule 89)

	'('            shift, and enter state 19
	true           shift, and enter state 23
	false          shift, and enter state 24
	array          shift, and enter state 25
	unit           shift, and enter state 26
	begin          shift, and enter state 28
	identifier     shift, and enter state 82
	number         shift, and enter state 32

	Literal        goto state 2
	Array_Def      goto state 6
	Accessible     goto state 9
	Block          goto state 12
	Object_Field   goto state 79
	Callable       goto state 14
	Application    goto state 15
	Array_Access   goto state 80
	Operation      goto state 81

State 51

	Operator -> '+' .                                   (rule 9)

	'('            reduce using rule 9
	true           reduce using rule 9
	false          reduce using rule 9
	array          reduce using rule 9
	unit           reduce using rule 9
	begin          reduce using rule 9
	identifier     reduce using rule 9
	number         reduce using rule 9


State 52

	Operator -> '-' .                                   (rule 10)

	'('            reduce using rule 10
	true           reduce using rule 10
	false          reduce using rule 10
	array          reduce using rule 10
	unit           reduce using rule 10
	begin          reduce using rule 10
	identifier     reduce using rule 10
	number         reduce using rule 10


State 53

	Operator -> '*' .                                   (rule 8)

	'('            reduce using rule 8
	true           reduce using rule 8
	false          reduce using rule 8
	array          reduce using rule 8
	unit           reduce using rule 8
	begin          reduce using rule 8
	identifier     reduce using rule 8
	number         reduce using rule 8


State 54

	Operator -> '/' .                                   (rule 11)

	'('            reduce using rule 11
	true           reduce using rule 11
	false          reduce using rule 11
	array          reduce using rule 11
	unit           reduce using rule 11
	begin          reduce using rule 11
	identifier     reduce using rule 11
	number         reduce using rule 11


State 55

	Operator -> '%' .                                   (rule 12)

	'('            reduce using rule 12
	true           reduce using rule 12
	false          reduce using rule 12
	array          reduce using rule 12
	unit           reduce using rule 12
	begin          reduce using rule 12
	identifier     reduce using rule 12
	number         reduce using rule 12


State 56

	Operator -> leq .                                   (rule 17)

	'('            reduce using rule 17
	true           reduce using rule 17
	false          reduce using rule 17
	array          reduce using rule 17
	unit           reduce using rule 17
	begin          reduce using rule 17
	identifier     reduce using rule 17
	number         reduce using rule 17


State 57

	Operator -> greq .                                  (rule 18)

	'('            reduce using rule 18
	true           reduce using rule 18
	false          reduce using rule 18
	array          reduce using rule 18
	unit           reduce using rule 18
	begin          reduce using rule 18
	identifier     reduce using rule 18
	number         reduce using rule 18


State 58

	Operator -> '<' .                                   (rule 15)

	'('            reduce using rule 15
	true           reduce using rule 15
	false          reduce using rule 15
	array          reduce using rule 15
	unit           reduce using rule 15
	begin          reduce using rule 15
	identifier     reduce using rule 15
	number         reduce using rule 15


State 59

	Operator -> '>' .                                   (rule 16)

	'('            reduce using rule 16
	true           reduce using rule 16
	false          reduce using rule 16
	array          reduce using rule 16
	unit           reduce using rule 16
	begin          reduce using rule 16
	identifier     reduce using rule 16
	number         reduce using rule 16


State 60

	Operator -> '|' .                                   (rule 20)

	'('            reduce using rule 20
	true           reduce using rule 20
	false          reduce using rule 20
	array          reduce using rule 20
	unit           reduce using rule 20
	begin          reduce using rule 20
	identifier     reduce using rule 20
	number         reduce using rule 20


State 61

	Operator -> '&' .                                   (rule 19)

	'('            reduce using rule 19
	true           reduce using rule 19
	false          reduce using rule 19
	array          reduce using rule 19
	unit           reduce using rule 19
	begin          reduce using rule 19
	identifier     reduce using rule 19
	number         reduce using rule 19


State 62

	Operator -> eq .                                    (rule 14)

	'('            reduce using rule 14
	true           reduce using rule 14
	false          reduce using rule 14
	array          reduce using rule 14
	unit           reduce using rule 14
	begin          reduce using rule 14
	identifier     reduce using rule 14
	number         reduce using rule 14


State 63

	Operator -> uneq .                                  (rule 13)

	'('            reduce using rule 13
	true           reduce using rule 13
	false          reduce using rule 13
	array          reduce using rule 13
	unit           reduce using rule 13
	begin          reduce using rule 13
	identifier     reduce using rule 13
	number         reduce using rule 13


State 64

	Mutation -> Array_Access larrow . Expression        (rule 51)

	'('            shift, and enter state 19
	while          shift, and enter state 20
	object         shift, and enter state 21
	if             shift, and enter state 22
	true           shift, and enter state 23
	false          shift, and enter state 24
	array          shift, and enter state 25
	unit           shift, and enter state 26
	let            shift, and enter state 27
	begin          shift, and enter state 28
	print          shift, and enter state 29
	function       shift, and enter state 30
	identifier     shift, and enter state 31
	number         shift, and enter state 32

	Literal        goto state 2
	Expression     goto state 78
	Function_Def   goto state 4
	Variable_Def   goto state 5
	Array_Def      goto state 6
	Object_Def     goto state 7
	Mutation       goto state 8
	Accessible     goto state 9
	Conditional    goto state 10
	Loop           goto state 11
	Block          goto state 12
	Object_Field   goto state 13
	Callable       goto state 14
	Application    goto state 15
	Array_Access   goto state 16
	Print          goto state 17
	Operation      goto state 18

State 65

	Application -> Callable '(' . Arg_List ')'          (rule 83)

	'('            shift, and enter state 19
	')'            reduce using rule 77
	while          shift, and enter state 20
	object         shift, and enter state 21
	if             shift, and enter state 22
	true           shift, and enter state 23
	false          shift, and enter state 24
	array          shift, and enter state 25
	unit           shift, and enter state 26
	let            shift, and enter state 27
	begin          shift, and enter state 28
	print          shift, and enter state 29
	function       shift, and enter state 30
	identifier     shift, and enter state 31
	number         shift, and enter state 32

	Literal        goto state 2
	Expression     goto state 76
	Function_Def   goto state 4
	Variable_Def   goto state 5
	Array_Def      goto state 6
	Object_Def     goto state 7
	Mutation       goto state 8
	Accessible     goto state 9
	Conditional    goto state 10
	Loop           goto state 11
	Block          goto state 12
	Object_Field   goto state 13
	Arg_List       goto state 77
	Callable       goto state 14
	Application    goto state 15
	Array_Access   goto state 16
	Print          goto state 17
	Operation      goto state 18

State 66

	Array_Access -> Object_Field '[' . Expression ']'    (rule 85)

	'('            shift, and enter state 19
	while          shift, and enter state 20
	object         shift, and enter state 21
	if             shift, and enter state 22
	true           shift, and enter state 23
	false          shift, and enter state 24
	array          shift, and enter state 25
	unit           shift, and enter state 26
	let            shift, and enter state 27
	begin          shift, and enter state 28
	print          shift, and enter state 29
	function       shift, and enter state 30
	identifier     shift, and enter state 31
	number         shift, and enter state 32

	Literal        goto state 2
	Expression     goto state 75
	Function_Def   goto state 4
	Variable_Def   goto state 5
	Array_Def      goto state 6
	Object_Def     goto state 7
	Mutation       goto state 8
	Accessible     goto state 9
	Conditional    goto state 10
	Loop           goto state 11
	Block          goto state 12
	Object_Field   goto state 13
	Callable       goto state 14
	Application    goto state 15
	Array_Access   goto state 16
	Print          goto state 17
	Operation      goto state 18

State 67

	Mutation -> Object_Field larrow . Expression        (rule 50)

	'('            shift, and enter state 19
	while          shift, and enter state 20
	object         shift, and enter state 21
	if             shift, and enter state 22
	true           shift, and enter state 23
	false          shift, and enter state 24
	array          shift, and enter state 25
	unit           shift, and enter state 26
	let            shift, and enter state 27
	begin          shift, and enter state 28
	print          shift, and enter state 29
	function       shift, and enter state 30
	identifier     shift, and enter state 31
	number         shift, and enter state 32

	Literal        goto state 2
	Expression     goto state 74
	Function_Def   goto state 4
	Variable_Def   goto state 5
	Array_Def      goto state 6
	Object_Def     goto state 7
	Mutation       goto state 8
	Accessible     goto state 9
	Conditional    goto state 10
	Loop           goto state 11
	Block          goto state 12
	Object_Field   goto state 13
	Callable       goto state 14
	Application    goto state 15
	Array_Access   goto state 16
	Print          goto state 17
	Operation      goto state 18

State 68

	Array_Access -> Accessible '[' . Expression ']'     (rule 84)

	'('            shift, and enter state 19
	while          shift, and enter state 20
	object         shift, and enter state 21
	if             shift, and enter state 22
	true           shift, and enter state 23
	false          shift, and enter state 24
	array          shift, and enter state 25
	unit           shift, and enter state 26
	let            shift, and enter state 27
	begin          shift, and enter state 28
	print          shift, and enter state 29
	function       shift, and enter state 30
	identifier     shift, and enter state 31
	number         shift, and enter state 32

	Literal        goto state 2
	Expression     goto state 73
	Function_Def   goto state 4
	Variable_Def   goto state 5
	Array_Def      goto state 6
	Object_Def     goto state 7
	Mutation       goto state 8
	Accessible     goto state 9
	Conditional    goto state 10
	Loop           goto state 11
	Block          goto state 12
	Object_Field   goto state 13
	Callable       goto state 14
	Application    goto state 15
	Array_Access   goto state 16
	Print          goto state 17
	Operation      goto state 18

State 69

	Object_Field -> Accessible '.' . Field_Seq identifier    (rule 64)

	identifier     shift, and enter state 72
			(reduce using rule 66)


	Field_Seq      goto state 71

State 70

	Semi_M -> ';' .                                     (rule 6)

	end            reduce using rule 6
	%eof           reduce using rule 6


State 71

	Object_Field -> Accessible '.' Field_Seq . identifier    (rule 64)

	identifier     shift, and enter state 119


State 72

	Field_Seq -> identifier . '.' Field_Seq             (rule 65)

	'.'            shift, and enter state 118


State 73

	Array_Access -> Accessible '[' Expression . ']'     (rule 84)

	']'            shift, and enter state 117


State 74

	Mutation -> Object_Field larrow Expression .        (rule 50)

	')'            reduce using rule 50
	']'            reduce using rule 50
	';'            reduce using rule 50
	'.'            reduce using rule 50
	','            reduce using rule 50
	else           reduce using rule 50
	then           reduce using rule 50
	begin          reduce using rule 50
	end            reduce using rule 50
	do             reduce using rule 50
	%eof           reduce using rule 50


State 75

	Array_Access -> Object_Field '[' Expression . ']'    (rule 85)

	']'            shift, and enter state 116


State 76

	Arg_List -> Expression . Value_Seq Comma_M          (rule 76)

	')'            reduce using rule 79
	';'            reduce using rule 79
	','            shift, and enter state 115

	Value_Seq      goto state 114

State 77

	Application -> Callable '(' Arg_List . ')'          (rule 83)

	')'            shift, and enter state 113


State 78

	Mutation -> Array_Access larrow Expression .        (rule 51)

	')'            reduce using rule 51
	']'            reduce using rule 51
	';'            reduce using rule 51
	'.'            reduce using rule 51
	','            reduce using rule 51
	else           reduce using rule 51
	then           reduce using rule 51
	begin          reduce using rule 51
	end            reduce using rule 51
	do             reduce using rule 51
	%eof           reduce using rule 51


State 79

	Callable -> Object_Field .                          (rule 81)
	Array_Access -> Object_Field . '[' Expression ']'    (rule 85)

	'('            reduce using rule 81
	'['            shift, and enter state 66


State 80

	Accessible -> Array_Access .                        (rule 56)

	')'            reduce using rule 56
	'['            reduce using rule 56
	']'            reduce using rule 56
	';'            reduce using rule 56
	'.'            reduce using rule 56
	','            reduce using rule 56
	'+'            reduce using rule 56
	'-'            reduce using rule 56
	'*'            reduce using rule 56
	'/'            reduce using rule 56
	'%'            reduce using rule 56
	leq            reduce using rule 56
	greq           reduce using rule 56
	'<'            reduce using rule 56
	'>'            reduce using rule 56
	'|'            reduce using rule 56
	'&'            reduce using rule 56
	eq             reduce using rule 56
	uneq           reduce using rule 56
	else           reduce using rule 56
	then           reduce using rule 56
	begin          reduce using rule 56
	end            reduce using rule 56
	do             reduce using rule 56
	%eof           reduce using rule 56


State 81

	Operation -> Operation . Operator Operation         (rule 89)
	Operation -> Operation Operator Operation .         (rule 89)

	')'            reduce using rule 89
	']'            reduce using rule 89
	';'            reduce using rule 89
	'.'            reduce using rule 89
	','            reduce using rule 89
	'+'            shift, and enter state 51
			(reduce using rule 89)

	'-'            shift, and enter state 52
			(reduce using rule 89)

	'*'            shift, and enter state 53
			(reduce using rule 89)

	'/'            shift, and enter state 54
			(reduce using rule 89)

	'%'            shift, and enter state 55
			(reduce using rule 89)

	leq            shift, and enter state 56
			(reduce using rule 89)

	greq           shift, and enter state 57
			(reduce using rule 89)

	'<'            shift, and enter state 58
			(reduce using rule 89)

	'>'            shift, and enter state 59
			(reduce using rule 89)

	'|'            shift, and enter state 60
			(reduce using rule 89)

	'&'            shift, and enter state 61
			(reduce using rule 89)

	eq             shift, and enter state 62
			(reduce using rule 89)

	uneq           shift, and enter state 63
			(reduce using rule 89)

	else           reduce using rule 89
	then           reduce using rule 89
	begin          reduce using rule 89
	end            reduce using rule 89
	do             reduce using rule 89
	%eof           reduce using rule 89

	Operator       goto state 50

State 82

	Accessible -> identifier .                          (rule 57)
	Callable -> identifier .                            (rule 80)

	'('            reduce using rule 80
	')'            reduce using rule 57
	'['            reduce using rule 57
	']'            reduce using rule 57
	';'            reduce using rule 57
	'.'            reduce using rule 57
	','            reduce using rule 57
	'+'            reduce using rule 57
	'-'            reduce using rule 57
	'*'            reduce using rule 57
	'/'            reduce using rule 57
	'%'            reduce using rule 57
	leq            reduce using rule 57
	greq           reduce using rule 57
	'<'            reduce using rule 57
	'>'            reduce using rule 57
	'|'            reduce using rule 57
	'&'            reduce using rule 57
	eq             reduce using rule 57
	uneq           reduce using rule 57
	else           reduce using rule 57
	then           reduce using rule 57
	begin          reduce using rule 57
	end            reduce using rule 57
	do             reduce using rule 57
	%eof           reduce using rule 57


State 83

	Accessible -> '(' Expression ')' .                  (rule 52)

	')'            reduce using rule 52
	'['            reduce using rule 52
	']'            reduce using rule 52
	';'            reduce using rule 52
	'.'            reduce using rule 52
	','            reduce using rule 52
	'+'            reduce using rule 52
	'-'            reduce using rule 52
	'*'            reduce using rule 52
	'/'            reduce using rule 52
	'%'            reduce using rule 52
	leq            reduce using rule 52
	greq           reduce using rule 52
	'<'            reduce using rule 52
	'>'            reduce using rule 52
	'|'            reduce using rule 52
	'&'            reduce using rule 52
	eq             reduce using rule 52
	uneq           reduce using rule 52
	else           reduce using rule 52
	then           reduce using rule 52
	begin          reduce using rule 52
	end            reduce using rule 52
	do             reduce using rule 52
	%eof           reduce using rule 52


State 84

	Loop -> while Expression do . Expression            (rule 62)

	'('            shift, and enter state 19
	while          shift, and enter state 20
	object         shift, and enter state 21
	if             shift, and enter state 22
	true           shift, and enter state 23
	false          shift, and enter state 24
	array          shift, and enter state 25
	unit           shift, and enter state 26
	let            shift, and enter state 27
	begin          shift, and enter state 28
	print          shift, and enter state 29
	function       shift, and enter state 30
	identifier     shift, and enter state 31
	number         shift, and enter state 32

	Literal        goto state 2
	Expression     goto state 112
	Function_Def   goto state 4
	Variable_Def   goto state 5
	Array_Def      goto state 6
	Object_Def     goto state 7
	Mutation       goto state 8
	Accessible     goto state 9
	Conditional    goto state 10
	Loop           goto state 11
	Block          goto state 12
	Object_Field   goto state 13
	Callable       goto state 14
	Application    goto state 15
	Array_Access   goto state 16
	Print          goto state 17
	Operation      goto state 18

State 85

	Param_List -> identifier Identifier_Seq . Comma_M    (rule 70)

	')'            reduce using rule 75
	';'            shift, and enter state 111
	extends        reduce using rule 75

	Comma_M        goto state 110

State 86

	Identifier_Seq -> ',' . identifier Identifier_Seq    (rule 72)

	identifier     shift, and enter state 109


State 87

	Object_Def -> object Param_List Extends . begin Object_Body end    (rule 40)

	begin          shift, and enter state 108


State 88

	Extends -> extends . Expression                     (rule 39)

	'('            shift, and enter state 19
	while          shift, and enter state 20
	object         shift, and enter state 21
	if             shift, and enter state 22
	true           shift, and enter state 23
	false          shift, and enter state 24
	array          shift, and enter state 25
	unit           shift, and enter state 26
	let            shift, and enter state 27
	begin          shift, and enter state 28
	print          shift, and enter state 29
	function       shift, and enter state 30
	identifier     shift, and enter state 31
	number         shift, and enter state 32

	Literal        goto state 2
	Expression     goto state 107
	Function_Def   goto state 4
	Variable_Def   goto state 5
	Array_Def      goto state 6
	Object_Def     goto state 7
	Mutation       goto state 8
	Accessible     goto state 9
	Conditional    goto state 10
	Loop           goto state 11
	Block          goto state 12
	Object_Field   goto state 13
	Callable       goto state 14
	Application    goto state 15
	Array_Access   goto state 16
	Print          goto state 17
	Operation      goto state 18

State 89

	Conditional -> if Expression then . Expression Else_M    (rule 59)

	'('            shift, and enter state 19
	while          shift, and enter state 20
	object         shift, and enter state 21
	if             shift, and enter state 22
	true           shift, and enter state 23
	false          shift, and enter state 24
	array          shift, and enter state 25
	unit           shift, and enter state 26
	let            shift, and enter state 27
	begin          shift, and enter state 28
	print          shift, and enter state 29
	function       shift, and enter state 30
	identifier     shift, and enter state 31
	number         shift, and enter state 32

	Literal        goto state 2
	Expression     goto state 106
	Function_Def   goto state 4
	Variable_Def   goto state 5
	Array_Def      goto state 6
	Object_Def     goto state 7
	Mutation       goto state 8
	Accessible     goto state 9
	Conditional    goto state 10
	Loop           goto state 11
	Block          goto state 12
	Object_Field   goto state 13
	Callable       goto state 14
	Application    goto state 15
	Array_Access   goto state 16
	Print          goto state 17
	Operation      goto state 18

State 90

	Array_Def -> array '(' Expression . '.' Expression ')'    (rule 37)

	'.'            shift, and enter state 105


State 91

	Variable_Def -> let identifier '=' . Expression     (rule 36)

	'('            shift, and enter state 19
	while          shift, and enter state 20
	object         shift, and enter state 21
	if             shift, and enter state 22
	true           shift, and enter state 23
	false          shift, and enter state 24
	array          shift, and enter state 25
	unit           shift, and enter state 26
	let            shift, and enter state 27
	begin          shift, and enter state 28
	print          shift, and enter state 29
	function       shift, and enter state 30
	identifier     shift, and enter state 31
	number         shift, and enter state 32

	Literal        goto state 2
	Expression     goto state 104
	Function_Def   goto state 4
	Variable_Def   goto state 5
	Array_Def      goto state 6
	Object_Def     goto state 7
	Mutation       goto state 8
	Accessible     goto state 9
	Conditional    goto state 10
	Loop           goto state 11
	Block          goto state 12
	Object_Field   goto state 13
	Callable       goto state 14
	Application    goto state 15
	Array_Access   goto state 16
	Print          goto state 17
	Operation      goto state 18

State 92

	Block -> begin Expression Expression_Seq . end      (rule 63)

	end            shift, and enter state 103


State 93

	Expression_Seq -> ';' . Expression Expression_Seq    (rule 4)

	'('            shift, and enter state 19
	while          shift, and enter state 20
	object         shift, and enter state 21
	if             shift, and enter state 22
	true           shift, and enter state 23
	false          shift, and enter state 24
	array          shift, and enter state 25
	unit           shift, and enter state 26
	let            shift, and enter state 27
	begin          shift, and enter state 28
	print          shift, and enter state 29
	function       shift, and enter state 30
	identifier     shift, and enter state 31
	number         shift, and enter state 32

	Literal        goto state 2
	Expression     goto state 97
	Function_Def   goto state 4
	Variable_Def   goto state 5
	Array_Def      goto state 6
	Object_Def     goto state 7
	Mutation       goto state 8
	Accessible     goto state 9
	Conditional    goto state 10
	Loop           goto state 11
	Block          goto state 12
	Object_Field   goto state 13
	Callable       goto state 14
	Application    goto state 15
	Array_Access   goto state 16
	Print          goto state 17
	Operation      goto state 18

State 94

	Print -> print '(' string . Prnt_Args ')'           (rule 88)

	')'            reduce using rule 87
	','            shift, and enter state 102

	Prnt_Args      goto state 101

State 95

	Function_Def -> function identifier '(' . Param_List ')' rarrow Expression    (rule 35)

	')'            reduce using rule 71
	identifier     shift, and enter state 47

	Param_List     goto state 100

State 96

	Mutation -> identifier larrow Expression .          (rule 49)

	')'            reduce using rule 49
	']'            reduce using rule 49
	';'            reduce using rule 49
	'.'            reduce using rule 49
	','            reduce using rule 49
	else           reduce using rule 49
	then           reduce using rule 49
	begin          reduce using rule 49
	end            reduce using rule 49
	do             reduce using rule 49
	%eof           reduce using rule 49


State 97

	Expression_Seq -> ';' Expression . Expression_Seq    (rule 4)

	';'            shift, and enter state 93
			(reduce using rule 5)

	end            reduce using rule 5
	%eof           reduce using rule 5

	Expression_Seq goto state 99

State 98

	TopLevel -> Expression Expression_Seq Semi_M .      (rule 2)

	%eof           reduce using rule 2


State 99

	Expression_Seq -> ';' Expression Expression_Seq .    (rule 4)

	';'            reduce using rule 4
	end            reduce using rule 4
	%eof           reduce using rule 4


State 100

	Function_Def -> function identifier '(' Param_List . ')' rarrow Expression    (rule 35)

	')'            shift, and enter state 135


State 101

	Print -> print '(' string Prnt_Args . ')'           (rule 88)

	')'            shift, and enter state 134


State 102

	Prnt_Args -> ',' . Arg_List                         (rule 86)

	'('            shift, and enter state 19
	')'            reduce using rule 77
	while          shift, and enter state 20
	object         shift, and enter state 21
	if             shift, and enter state 22
	true           shift, and enter state 23
	false          shift, and enter state 24
	array          shift, and enter state 25
	unit           shift, and enter state 26
	let            shift, and enter state 27
	begin          shift, and enter state 28
	print          shift, and enter state 29
	function       shift, and enter state 30
	identifier     shift, and enter state 31
	number         shift, and enter state 32

	Literal        goto state 2
	Expression     goto state 76
	Function_Def   goto state 4
	Variable_Def   goto state 5
	Array_Def      goto state 6
	Object_Def     goto state 7
	Mutation       goto state 8
	Accessible     goto state 9
	Conditional    goto state 10
	Loop           goto state 11
	Block          goto state 12
	Object_Field   goto state 13
	Arg_List       goto state 133
	Callable       goto state 14
	Application    goto state 15
	Array_Access   goto state 16
	Print          goto state 17
	Operation      goto state 18

State 103

	Block -> begin Expression Expression_Seq end .      (rule 63)

	')'            reduce using rule 63
	'['            reduce using rule 63
	']'            reduce using rule 63
	';'            reduce using rule 63
	'.'            reduce using rule 63
	','            reduce using rule 63
	'+'            reduce using rule 63
	'-'            reduce using rule 63
	'*'            reduce using rule 63
	'/'            reduce using rule 63
	'%'            reduce using rule 63
	leq            reduce using rule 63
	greq           reduce using rule 63
	'<'            reduce using rule 63
	'>'            reduce using rule 63
	'|'            reduce using rule 63
	'&'            reduce using rule 63
	eq             reduce using rule 63
	uneq           reduce using rule 63
	else           reduce using rule 63
	then           reduce using rule 63
	begin          reduce using rule 63
	end            reduce using rule 63
	do             reduce using rule 63
	%eof           reduce using rule 63


State 104

	Variable_Def -> let identifier '=' Expression .     (rule 36)

	')'            reduce using rule 36
	']'            reduce using rule 36
	';'            reduce using rule 36
	'.'            reduce using rule 36
	','            reduce using rule 36
	else           reduce using rule 36
	then           reduce using rule 36
	begin          reduce using rule 36
	end            reduce using rule 36
	do             reduce using rule 36
	%eof           reduce using rule 36


State 105

	Array_Def -> array '(' Expression '.' . Expression ')'    (rule 37)

	'('            shift, and enter state 19
	while          shift, and enter state 20
	object         shift, and enter state 21
	if             shift, and enter state 22
	true           shift, and enter state 23
	false          shift, and enter state 24
	array          shift, and enter state 25
	unit           shift, and enter state 26
	let            shift, and enter state 27
	begin          shift, and enter state 28
	print          shift, and enter state 29
	function       shift, and enter state 30
	identifier     shift, and enter state 31
	number         shift, and enter state 32

	Literal        goto state 2
	Expression     goto state 132
	Function_Def   goto state 4
	Variable_Def   goto state 5
	Array_Def      goto state 6
	Object_Def     goto state 7
	Mutation       goto state 8
	Accessible     goto state 9
	Conditional    goto state 10
	Loop           goto state 11
	Block          goto state 12
	Object_Field   goto state 13
	Callable       goto state 14
	Application    goto state 15
	Array_Access   goto state 16
	Print          goto state 17
	Operation      goto state 18

State 106

	Conditional -> if Expression then Expression . Else_M    (rule 59)

	')'            reduce using rule 61
	']'            reduce using rule 61
	';'            reduce using rule 61
	'.'            reduce using rule 61
	','            reduce using rule 61
	else           shift, and enter state 131
			(reduce using rule 61)

	then           reduce using rule 61
	begin          reduce using rule 61
	end            reduce using rule 61
	do             reduce using rule 61
	%eof           reduce using rule 61

	Else_M         goto state 130

State 107

	Extends -> extends Expression .                     (rule 39)

	begin          reduce using rule 39


State 108

	Object_Def -> object Param_List Extends begin . Object_Body end    (rule 40)

	let            shift, and enter state 27
	end            reduce using rule 43
	function       shift, and enter state 129

	Function_Def   goto state 124
	Variable_Def   goto state 125
	Operator_Def   goto state 126
	Object_Body    goto state 127
	Member         goto state 128

State 109

	Identifier_Seq -> ',' identifier . Identifier_Seq    (rule 72)

	')'            reduce using rule 73
	';'            reduce using rule 73
	','            shift, and enter state 86
	extends        reduce using rule 73

	Identifier_Seq goto state 123

State 110

	Param_List -> identifier Identifier_Seq Comma_M .    (rule 70)

	')'            reduce using rule 70
	extends        reduce using rule 70


State 111

	Comma_M -> ';' .                                    (rule 74)

	')'            reduce using rule 74
	extends        reduce using rule 74


State 112

	Loop -> while Expression do Expression .            (rule 62)

	')'            reduce using rule 62
	']'            reduce using rule 62
	';'            reduce using rule 62
	'.'            reduce using rule 62
	','            reduce using rule 62
	else           reduce using rule 62
	then           reduce using rule 62
	begin          reduce using rule 62
	end            reduce using rule 62
	do             reduce using rule 62
	%eof           reduce using rule 62


State 113

	Application -> Callable '(' Arg_List ')' .          (rule 83)

	')'            reduce using rule 83
	'['            reduce using rule 83
	']'            reduce using rule 83
	';'            reduce using rule 83
	'.'            reduce using rule 83
	','            reduce using rule 83
	'+'            reduce using rule 83
	'-'            reduce using rule 83
	'*'            reduce using rule 83
	'/'            reduce using rule 83
	'%'            reduce using rule 83
	leq            reduce using rule 83
	greq           reduce using rule 83
	'<'            reduce using rule 83
	'>'            reduce using rule 83
	'|'            reduce using rule 83
	'&'            reduce using rule 83
	eq             reduce using rule 83
	uneq           reduce using rule 83
	else           reduce using rule 83
	then           reduce using rule 83
	begin          reduce using rule 83
	end            reduce using rule 83
	do             reduce using rule 83
	%eof           reduce using rule 83


State 114

	Arg_List -> Expression Value_Seq . Comma_M          (rule 76)

	')'            reduce using rule 75
	';'            shift, and enter state 111

	Comma_M        goto state 122

State 115

	Value_Seq -> ',' . Expression Value_Seq             (rule 78)

	'('            shift, and enter state 19
	while          shift, and enter state 20
	object         shift, and enter state 21
	if             shift, and enter state 22
	true           shift, and enter state 23
	false          shift, and enter state 24
	array          shift, and enter state 25
	unit           shift, and enter state 26
	let            shift, and enter state 27
	begin          shift, and enter state 28
	print          shift, and enter state 29
	function       shift, and enter state 30
	identifier     shift, and enter state 31
	number         shift, and enter state 32

	Literal        goto state 2
	Expression     goto state 121
	Function_Def   goto state 4
	Variable_Def   goto state 5
	Array_Def      goto state 6
	Object_Def     goto state 7
	Mutation       goto state 8
	Accessible     goto state 9
	Conditional    goto state 10
	Loop           goto state 11
	Block          goto state 12
	Object_Field   goto state 13
	Callable       goto state 14
	Application    goto state 15
	Array_Access   goto state 16
	Print          goto state 17
	Operation      goto state 18

State 116

	Array_Access -> Object_Field '[' Expression ']' .    (rule 85)

	')'            reduce using rule 85
	'['            reduce using rule 85
	']'            reduce using rule 85
	';'            reduce using rule 85
	'.'            reduce using rule 85
	','            reduce using rule 85
	larrow         reduce using rule 85
	'+'            reduce using rule 85
	'-'            reduce using rule 85
	'*'            reduce using rule 85
	'/'            reduce using rule 85
	'%'            reduce using rule 85
	leq            reduce using rule 85
	greq           reduce using rule 85
	'<'            reduce using rule 85
	'>'            reduce using rule 85
	'|'            reduce using rule 85
	'&'            reduce using rule 85
	eq             reduce using rule 85
	uneq           reduce using rule 85
	else           reduce using rule 85
	then           reduce using rule 85
	begin          reduce using rule 85
	end            reduce using rule 85
	do             reduce using rule 85
	%eof           reduce using rule 85


State 117

	Array_Access -> Accessible '[' Expression ']' .     (rule 84)

	')'            reduce using rule 84
	'['            reduce using rule 84
	']'            reduce using rule 84
	';'            reduce using rule 84
	'.'            reduce using rule 84
	','            reduce using rule 84
	larrow         reduce using rule 84
	'+'            reduce using rule 84
	'-'            reduce using rule 84
	'*'            reduce using rule 84
	'/'            reduce using rule 84
	'%'            reduce using rule 84
	leq            reduce using rule 84
	greq           reduce using rule 84
	'<'            reduce using rule 84
	'>'            reduce using rule 84
	'|'            reduce using rule 84
	'&'            reduce using rule 84
	eq             reduce using rule 84
	uneq           reduce using rule 84
	else           reduce using rule 84
	then           reduce using rule 84
	begin          reduce using rule 84
	end            reduce using rule 84
	do             reduce using rule 84
	%eof           reduce using rule 84


State 118

	Field_Seq -> identifier '.' . Field_Seq             (rule 65)

	identifier     shift, and enter state 72
			(reduce using rule 66)


	Field_Seq      goto state 120

State 119

	Object_Field -> Accessible '.' Field_Seq identifier .    (rule 64)

	'('            reduce using rule 64
	')'            reduce using rule 64
	'['            reduce using rule 64
	']'            reduce using rule 64
	';'            reduce using rule 64
	'.'            reduce using rule 64
	','            reduce using rule 64
	larrow         reduce using rule 64
	else           reduce using rule 64
	then           reduce using rule 64
	begin          reduce using rule 64
	end            reduce using rule 64
	do             reduce using rule 64
	%eof           reduce using rule 64


State 120

	Field_Seq -> identifier '.' Field_Seq .             (rule 65)

	identifier     reduce using rule 65


State 121

	Value_Seq -> ',' Expression . Value_Seq             (rule 78)

	')'            reduce using rule 79
	';'            reduce using rule 79
	','            shift, and enter state 115

	Value_Seq      goto state 144

State 122

	Arg_List -> Expression Value_Seq Comma_M .          (rule 76)

	')'            reduce using rule 76


State 123

	Identifier_Seq -> ',' identifier Identifier_Seq .    (rule 72)

	')'            reduce using rule 72
	';'            reduce using rule 72
	extends        reduce using rule 72


State 124

	Member -> Function_Def .                            (rule 45)

	';'            reduce using rule 45
	end            reduce using rule 45


State 125

	Member -> Variable_Def .                            (rule 44)

	';'            reduce using rule 44
	end            reduce using rule 44


State 126

	Member -> Operator_Def .                            (rule 46)

	';'            reduce using rule 46
	end            reduce using rule 46


State 127

	Object_Def -> object Param_List Extends begin Object_Body . end    (rule 40)

	end            shift, and enter state 143


State 128

	Object_Body -> Member . Semi_M                      (rule 41)
	Object_Body -> Member . Member_Seq Semi_M           (rule 42)

	';'            shift, and enter state 142
			(reduce using rule 48)

	end            reduce using rule 48
			(reduce using rule 7)


	Semi_M         goto state 140
	Member_Seq     goto state 141

State 129

	Function_Def -> function . identifier '(' Param_List ')' rarrow Expression    (rule 35)
	Operator_Def -> function . Operator '(' Param_List ')' rarrow Expression    (rule 38)

	'+'            shift, and enter state 51
	'-'            shift, and enter state 52
	'*'            shift, and enter state 53
	'/'            shift, and enter state 54
	'%'            shift, and enter state 55
	leq            shift, and enter state 56
	greq           shift, and enter state 57
	'<'            shift, and enter state 58
	'>'            shift, and enter state 59
	'|'            shift, and enter state 60
	'&'            shift, and enter state 61
	eq             shift, and enter state 62
	uneq           shift, and enter state 63
	identifier     shift, and enter state 39

	Operator       goto state 139

State 130

	Conditional -> if Expression then Expression Else_M .    (rule 59)

	')'            reduce using rule 59
	']'            reduce using rule 59
	';'            reduce using rule 59
	'.'            reduce using rule 59
	','            reduce using rule 59
	else           reduce using rule 59
	then           reduce using rule 59
	begin          reduce using rule 59
	end            reduce using rule 59
	do             reduce using rule 59
	%eof           reduce using rule 59


State 131

	Else_M -> else . Expression                         (rule 60)

	'('            shift, and enter state 19
	while          shift, and enter state 20
	object         shift, and enter state 21
	if             shift, and enter state 22
	true           shift, and enter state 23
	false          shift, and enter state 24
	array          shift, and enter state 25
	unit           shift, and enter state 26
	let            shift, and enter state 27
	begin          shift, and enter state 28
	print          shift, and enter state 29
	function       shift, and enter state 30
	identifier     shift, and enter state 31
	number         shift, and enter state 32

	Literal        goto state 2
	Expression     goto state 138
	Function_Def   goto state 4
	Variable_Def   goto state 5
	Array_Def      goto state 6
	Object_Def     goto state 7
	Mutation       goto state 8
	Accessible     goto state 9
	Conditional    goto state 10
	Loop           goto state 11
	Block          goto state 12
	Object_Field   goto state 13
	Callable       goto state 14
	Application    goto state 15
	Array_Access   goto state 16
	Print          goto state 17
	Operation      goto state 18

State 132

	Array_Def -> array '(' Expression '.' Expression . ')'    (rule 37)

	')'            shift, and enter state 137


State 133

	Prnt_Args -> ',' Arg_List .                         (rule 86)

	')'            reduce using rule 86


State 134

	Print -> print '(' string Prnt_Args ')' .           (rule 88)

	')'            reduce using rule 88
	']'            reduce using rule 88
	';'            reduce using rule 88
	'.'            reduce using rule 88
	','            reduce using rule 88
	else           reduce using rule 88
	then           reduce using rule 88
	begin          reduce using rule 88
	end            reduce using rule 88
	do             reduce using rule 88
	%eof           reduce using rule 88


State 135

	Function_Def -> function identifier '(' Param_List ')' . rarrow Expression    (rule 35)

	rarrow         shift, and enter state 136


State 136

	Function_Def -> function identifier '(' Param_List ')' rarrow . Expression    (rule 35)

	'('            shift, and enter state 19
	while          shift, and enter state 20
	object         shift, and enter state 21
	if             shift, and enter state 22
	true           shift, and enter state 23
	false          shift, and enter state 24
	array          shift, and enter state 25
	unit           shift, and enter state 26
	let            shift, and enter state 27
	begin          shift, and enter state 28
	print          shift, and enter state 29
	function       shift, and enter state 30
	identifier     shift, and enter state 31
	number         shift, and enter state 32

	Literal        goto state 2
	Expression     goto state 148
	Function_Def   goto state 4
	Variable_Def   goto state 5
	Array_Def      goto state 6
	Object_Def     goto state 7
	Mutation       goto state 8
	Accessible     goto state 9
	Conditional    goto state 10
	Loop           goto state 11
	Block          goto state 12
	Object_Field   goto state 13
	Callable       goto state 14
	Application    goto state 15
	Array_Access   goto state 16
	Print          goto state 17
	Operation      goto state 18

State 137

	Array_Def -> array '(' Expression '.' Expression ')' .    (rule 37)

	')'            reduce using rule 37
	'['            reduce using rule 37
	']'            reduce using rule 37
	';'            reduce using rule 37
	'.'            reduce using rule 37
	','            reduce using rule 37
	'+'            reduce using rule 37
	'-'            reduce using rule 37
	'*'            reduce using rule 37
	'/'            reduce using rule 37
	'%'            reduce using rule 37
	leq            reduce using rule 37
	greq           reduce using rule 37
	'<'            reduce using rule 37
	'>'            reduce using rule 37
	'|'            reduce using rule 37
	'&'            reduce using rule 37
	eq             reduce using rule 37
	uneq           reduce using rule 37
	else           reduce using rule 37
	then           reduce using rule 37
	begin          reduce using rule 37
	end            reduce using rule 37
	do             reduce using rule 37
	%eof           reduce using rule 37


State 138

	Else_M -> else Expression .                         (rule 60)

	')'            reduce using rule 60
	']'            reduce using rule 60
	';'            reduce using rule 60
	'.'            reduce using rule 60
	','            reduce using rule 60
	else           reduce using rule 60
	then           reduce using rule 60
	begin          reduce using rule 60
	end            reduce using rule 60
	do             reduce using rule 60
	%eof           reduce using rule 60


State 139

	Operator_Def -> function Operator . '(' Param_List ')' rarrow Expression    (rule 38)

	'('            shift, and enter state 147


State 140

	Object_Body -> Member Semi_M .                      (rule 41)

	end            reduce using rule 41


State 141

	Object_Body -> Member Member_Seq . Semi_M           (rule 42)

	';'            shift, and enter state 70
	end            reduce using rule 7

	Semi_M         goto state 146

State 142

	Semi_M -> ';' .                                     (rule 6)
	Member_Seq -> ';' . Member Member_Seq               (rule 47)

	let            shift, and enter state 27
	end            reduce using rule 6
	function       shift, and enter state 129

	Function_Def   goto state 124
	Variable_Def   goto state 125
	Operator_Def   goto state 126
	Member         goto state 145

State 143

	Object_Def -> object Param_List Extends begin Object_Body end .    (rule 40)

	')'            reduce using rule 40
	']'            reduce using rule 40
	';'            reduce using rule 40
	'.'            reduce using rule 40
	','            reduce using rule 40
	else           reduce using rule 40
	then           reduce using rule 40
	begin          reduce using rule 40
	end            reduce using rule 40
	do             reduce using rule 40
	%eof           reduce using rule 40


State 144

	Value_Seq -> ',' Expression Value_Seq .             (rule 78)

	')'            reduce using rule 78
	';'            reduce using rule 78


State 145

	Member_Seq -> ';' Member . Member_Seq               (rule 47)

	';'            shift, and enter state 151
			(reduce using rule 48)

	end            reduce using rule 48

	Member_Seq     goto state 150

State 146

	Object_Body -> Member Member_Seq Semi_M .           (rule 42)

	end            reduce using rule 42


State 147

	Operator_Def -> function Operator '(' . Param_List ')' rarrow Expression    (rule 38)

	')'            reduce using rule 71
	identifier     shift, and enter state 47

	Param_List     goto state 149

State 148

	Function_Def -> function identifier '(' Param_List ')' rarrow Expression .    (rule 35)

	')'            reduce using rule 35
	']'            reduce using rule 35
	';'            reduce using rule 35
	'.'            reduce using rule 35
	','            reduce using rule 35
	else           reduce using rule 35
	then           reduce using rule 35
	begin          reduce using rule 35
	end            reduce using rule 35
	do             reduce using rule 35
	%eof           reduce using rule 35


State 149

	Operator_Def -> function Operator '(' Param_List . ')' rarrow Expression    (rule 38)

	')'            shift, and enter state 152


State 150

	Member_Seq -> ';' Member Member_Seq .               (rule 47)

	';'            reduce using rule 47
	end            reduce using rule 47


State 151

	Member_Seq -> ';' . Member Member_Seq               (rule 47)

	let            shift, and enter state 27
	function       shift, and enter state 129

	Function_Def   goto state 124
	Variable_Def   goto state 125
	Operator_Def   goto state 126
	Member         goto state 145

State 152

	Operator_Def -> function Operator '(' Param_List ')' . rarrow Expression    (rule 38)

	rarrow         shift, and enter state 153


State 153

	Operator_Def -> function Operator '(' Param_List ')' rarrow . Expression    (rule 38)

	'('            shift, and enter state 19
	while          shift, and enter state 20
	object         shift, and enter state 21
	if             shift, and enter state 22
	true           shift, and enter state 23
	false          shift, and enter state 24
	array          shift, and enter state 25
	unit           shift, and enter state 26
	let            shift, and enter state 27
	begin          shift, and enter state 28
	print          shift, and enter state 29
	function       shift, and enter state 30
	identifier     shift, and enter state 31
	number         shift, and enter state 32

	Literal        goto state 2
	Expression     goto state 154
	Function_Def   goto state 4
	Variable_Def   goto state 5
	Array_Def      goto state 6
	Object_Def     goto state 7
	Mutation       goto state 8
	Accessible     goto state 9
	Conditional    goto state 10
	Loop           goto state 11
	Block          goto state 12
	Object_Field   goto state 13
	Callable       goto state 14
	Application    goto state 15
	Array_Access   goto state 16
	Print          goto state 17
	Operation      goto state 18

State 154

	Operator_Def -> function Operator '(' Param_List ')' rarrow Expression .    (rule 38)

	';'            reduce using rule 38
	end            reduce using rule 38


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 91
Number of terminals: 43
Number of non-terminals: 37
Number of states: 155
